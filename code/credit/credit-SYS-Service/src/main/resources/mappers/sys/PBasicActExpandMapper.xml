<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.castiel.dao.sys.PBasicActExpandMapper">
	<resultMap id="BaseResultMap" type="com.castiel.model.generator.PBasicAct">
		<id column="id_" jdbcType="VARCHAR" property="id" />
		<result column="ACT_NAME" jdbcType="VARCHAR" property="actName" />
		<result column="DEPT_ID" jdbcType="VARCHAR" property="deptId" />
		<result column="ACT_NO" jdbcType="VARCHAR" property="actNo" />
		<result column="ACT_ENROL_START_TIME" jdbcType="TIMESTAMP" property="actEnrolStartTime" />
		<result column="ACT_ENROL_END_TIME" jdbcType="TIMESTAMP" property="actEnrolEndTime" />
		<result column="ACT_START_TIME" jdbcType="TIMESTAMP" property="actStartTime" />
		<result column="ACT_END_TIME" jdbcType="TIMESTAMP" property="actEndTime" />
		<result column="ACT_CONTENT" jdbcType="VARCHAR" property="actContent" />
		<result column="ACT_PLACE" jdbcType="VARCHAR" property="actPlace" />
		<result column="STORAGE_TIME" jdbcType="TIMESTAMP" property="storageTime" />
		<result column="CONTYPE" jdbcType="VARCHAR" property="conType" />
		<result column="ACT_CANCLE_TIME" jdbcType="TIMESTAMP" property="actCancleTime" />
		<result column="ACT_PEOPLE_NUMBER" jdbcType="VARCHAR" property="actPeopleNumber" />
		<result column="ACT_STUDENT_NUMBER" jdbcType="VARCHAR" property="actStudentNumber" />
		<result column="ACT_TEACHER_NUMBER" jdbcType="VARCHAR" property="actTeacherNumber" />

	</resultMap>
	<select id="queryActNoByActName" resultType="java.lang.String">
		select ACT_NO from
		p_basic_act where ACT_NAME = #{actName}
	</select>
	<select id="getActByActId" resultMap="BaseResultMap">
		select *
		from
			p_basic_act 
		where
			id_=#{actId}
	</select>

	<select id="queryActs" resultType="com.castiel.model.generator.PBasicAct">
		select id_ AS id, ACT_NAME as
		'actName',ACT_NO as 'actNo' from p_basic_act ORDER BY ACT_START_TIME DESC LIMIT
		#{0},#{1}
	</select>
	<select id="searchAct" resultType="com.castiel.model.sys.PBasicActBean">
		SELECT id_ actid, ACT_NAME actName,ACT_NO actNo,ACT_PLACE actPlace
		FROM p_basic_act
		WHERE 1=1
		<if test="keyword != null">
			AND (ACT_NAME like CONCAT('%',#{keyword},'%')
		</if>
		<if test="deptId !=null">
			AND DEPT_ID = #{deptId}
		</if>
	</select>
	<select id="queryTotal" resultType="int">
		select count(*) from
		p_basic_act
	</select>

	<select id="isEnrolTime" resultType="java.lang.Integer">
		SELECT
		COUNT(1)
		FROM
		p_basic_act p
		WHERE
		p.id_ = #{actid}
		AND (
		NOW() BETWEEN
		p.ACT_ENROL_START_TIME
		AND p.ACT_ENROL_END_TIME
		)
	</select>


	<select resultType="java.lang.String" id="query" parameterType="java.util.Map">
		select id_ from p_basic_act where 1=1
		<if test="keyword != null">
			and (ACT_NAME like CONCAT('%',#{keyword},'%'))
		</if>
		<if test="conType != null">
			and (CONTYPE = #{conType})
		</if>
		ORDER BY ACT_START_TIME DESC
	</select>

	<delete id="deletePBasicActById" parameterType="java.lang.String">
		delete from
		p_basic_act where id_=#{actId}
	</delete>

	<!-- 查询最后更新日期 -->
	<select id="actStorageTime" resultType="java.util.Date">
		SELECT
		MAX(p.STORAGE_TIME) stime FROM p_basic_act p
	</select>

	<select id="getFullCount" resultType="java.lang.String">
		select
			 <choose>
		        <when test="type==1">
		           ACT_STUDENT_NUMBER
		        </when>
		       <when test="type==2">
		           ACT_STUDENT_NUMBER
		        </when>
		        <when test="type==3">
		           ACT_STUDENT_NUMBER
		        </when>
		        <when test="type==4">
		           ACT_TEACHER_NUMBER
		        </when>
		        <otherwise>
		            0
		        </otherwise>
		    </choose>
		from
		p_basic_act where id_ = #{actid}
	</select>
	
	<select id="queryEnrollActs" resultType="com.castiel.model.generator.PBasicAct">
		select id_ AS id,
		ACT_NAME as
		'actName',ACT_NO as 'actNo' from p_basic_act
		WHERE NOW()
		BETWEEN
		ACT_ENROL_START_TIME
		AND ACT_ENROL_END_TIME
		ORDER BY ACT_START_TIME DESC
		LIMIT
		#{0},#{1}
	</select>
</mapper>
